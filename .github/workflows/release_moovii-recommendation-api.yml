name: Build and deploy Python app to Azure Web App - moovii-recommendation-api

on:
  push:
    branches:
      - release
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        
      - name: Zip artifact for deployment
        run: zip -r release.zip app/ migrations/ requirements.txt readme.md .env.example

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_269A3BB10C274246AC496129B0E5A69E }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_C280D0CD0D7C435DB6CABB006D049750 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_349A1604F0B0495F8CF3388C0920ACA1 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'moovii-recommendation-api'
          slot-name: 'Production'
          package: .
          startup-command: "uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"