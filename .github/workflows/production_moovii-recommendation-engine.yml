name: Build and deploy Python app to Azure Web App - moovii-recommendation-engine

on:
  push:
    branches:
      - production
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Zip artifact for deployment
        run: |
          zip -r release.zip app/ migrations/ requirements.txt readme.md .env.example

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_5D686BEB0A9B4B08AD1EE3FB50BDC076 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_1A8BFA9EC81D4BBA9CD88F1F722CE681 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_1962C19ADAA448E0BCAC6CE249B5D778 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'moovii-recommendation-engine'
          slot-name: 'Production'
          package: .
          startup-command: "gunicorn --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8080 -w 2 --timeout 600 --access-logfile '-' --error-logfile '-' app.main:app"